//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from formula.g4 by ANTLR 4.5.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="formulaParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.3")]
[System.CLSCompliant(false)]
public interface IformulaListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="formulaParser.equation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEquation([NotNull] formulaParser.EquationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="formulaParser.equation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEquation([NotNull] formulaParser.EquationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="formulaParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] formulaParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="formulaParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] formulaParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="formulaParser.multiplyingExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplyingExpression([NotNull] formulaParser.MultiplyingExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="formulaParser.multiplyingExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplyingExpression([NotNull] formulaParser.MultiplyingExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="formulaParser.powExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPowExpression([NotNull] formulaParser.PowExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="formulaParser.powExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPowExpression([NotNull] formulaParser.PowExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="formulaParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtom([NotNull] formulaParser.AtomContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="formulaParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtom([NotNull] formulaParser.AtomContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="formulaParser.scientific"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScientific([NotNull] formulaParser.ScientificContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="formulaParser.scientific"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScientific([NotNull] formulaParser.ScientificContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="formulaParser.relop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelop([NotNull] formulaParser.RelopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="formulaParser.relop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelop([NotNull] formulaParser.RelopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="formulaParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumber([NotNull] formulaParser.NumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="formulaParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumber([NotNull] formulaParser.NumberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="formulaParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariable([NotNull] formulaParser.VariableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="formulaParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariable([NotNull] formulaParser.VariableContext context);
}
